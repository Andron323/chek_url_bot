import datetime
import threading
import urllib.request

import mysql.connector
import requests
import telebot
from bs4 import BeautifulSoup

import constants

now = datetime.datetime.now()
now_month = now.month
now_day = now.day
print("–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü: %d" % now_month)
print("–¢–µ–∫—É—â–∏–π –¥–µ–Ω—å: %d" % now_day)

try:
    db = mysql.connector.connect(
        host="209.250.253.38",
        user="gpbot_user",
        passwd="DHUIEh#$4647",
        port="3306",
        database="gpbot_db"
    )
    print(db)
    cursor = db.cursor()
except Exception as e:
    print(e)
    print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

id = []
status = []
day_off = []

try:
    cursor.execute("SELECT * FROM user")
    result = cursor.fetchall()
    for x in result:
        print(x)

    cursor.execute("SELECT id_user FROM user")
    result = cursor.fetchall()
    id.clear()
    for x in result:
        # print(x)
        id.append(x)
    print(id)

    cursor.execute("SELECT status FROM user")
    result = cursor.fetchall()
    status.clear()
    for x in result:
        # print(x)
        status.append(x)
    print(status)

    cursor.execute("SELECT offtime FROM user")
    result = cursor.fetchall()
    day_off.clear()
    for x in result:
        # print(x)
        day_off.append(x)
    print(day_off)
except Exception as e:
    print(e)
    print("–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö(–ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç)")

global defalt_status
defalt_status = 0
global defalt_data
defalt_data = 0

cheker = 0
bot = telebot.TeleBot(constants.token)


# def thread(my_func):
#     def wrapper(*args, **kwargs):
#         my_thread = threading.Thread(target=my_func, args=args, kwargs=kwargs, daemon=True)
#         my_thread.start()
#
#     return wrapper
#
#
# @thread
# def go(nomer):
#     for x in range(1, 200):
#         print("–ü–æ—Ç–æ–∫ –Ω–æ–º–µ—Ä" + str(nomer) + "—á–∏—Å–ª–æ" + str(x) + "\n")

# ----------------------------------------------------------------------------/start----------------------------------------------------------------------------------
@bot.message_handler(commands=["start"])
def handle_commanddd(message):
    chen_id_ = "(" + str(message.chat.id) + ",)"
    if str(chen_id_) not in str(id):
        try:
            db = mysql.connector.connect(
                host="209.250.253.38",
                user="gpbot_user",
                passwd="DHUIEh#$4647",
                port="3306",
                database="gpbot_db"
            )
            print(db)
            cursor = db.cursor()
        except Exception as e:
            print(e)
            print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        try:
            sql = "INSERT INTO user (id_user, status, offtime) VALUES (%s, %s, %s)"
            val = (message.chat.id, defalt_status, defalt_data)
            cursor.execute(sql, val)
            db.commit()
            print(cursor.rowcount, "–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–µ–Ω–∞")
        except Exception as e:
            print(e)
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    try:
        cursor.execute("SELECT * FROM user")
        result = cursor.fetchall()
        for x in result:
            print(x)

        cursor.execute("SELECT id_user FROM user")
        result = cursor.fetchall()
        id.clear()
        for x in result:
            # print(x)
            id.append(x)
        print(id)

        cursor.execute("SELECT status FROM user")
        result = cursor.fetchall()
        status.clear()
        for x in result:
            # print(x)
            status.append(x)
        print(status)

        cursor.execute("SELECT offtime FROM user")
        result = cursor.fetchall()
        day_off.clear()
        for x in result:
            # print(x)
            day_off.append(x)
        print(day_off)
    except Exception as e:
        print(e)
        print("–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
    user_markup.row("‚úÖ –î–û–ë–ê–í–ò–¢–¨", "‚ùå –£–î–ê–õ–ò–¢–¨")
    user_markup.row("‚úçüèª –í–†–£–ß–ù–£–Æ", "üìñ –°–ü–ò–°–û–ö")
    user_markup.row("üëë –¢–ê–†–ò–§–´", "üõé –ü–û–î–î–ï–†–ñ–ö–ê")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!", reply_markup=user_markup)
    try:
        file = open(str(message.chat.id) + "problem.txt")
        file = open(str(message.chat.id) + "url.txt")
    except Exception as e:
        print(e)
        kreate = open(str(message.chat.id) + 'problem.txt', 'tw', encoding='utf-8')
        kreate.close()
        kreate2 = open(str(message.chat.id) + 'url.txt', 'tw', encoding='utf-8')
        kreate2.close()
    chen_id = "(" + str(message.chat.id) + ",)"
    print(chen_id)
    print(id)
    if str(chen_id) not in str(id):
        bot.send_message(message.chat.id, "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞\n"
                                          "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                                          "@rallen, —Å–æ–æ–±—â–∏—Ç–µ –≤–∞—à ID:\n"
                                          "–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
                                          "–Ω–∞–∂–º–∏—Ç–µ /start")
        bot.send_message(message.chat.id, message.chat.id)
    else:
        bot.send_message(message.chat.id, "–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω, –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Ä–∞–±–æ—Ç–µ")

        def chek_data():
            threading.Timer(21600.0, chek_data).start()
            print("–†–∞–±–æ—Ç–∞–µ—Ç")

            now2 = datetime.datetime.now()
            global now_month2
            now_month2 = now2.month
            global now_day2
            now_day2 = now2.day

            try:
                db = mysql.connector.connect(
                    host="209.250.253.38",
                    user="gpbot_user",
                    passwd="DHUIEh#$4647",
                    port="3306",
                    database="gpbot_db"
                )
                print(db)
                cursor = db.cursor()
            except Exception as e:
                print(e)
                print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

            nomber = 0
            try:
                cursor.execute("SELECT id_user FROM user")
                result = cursor.fetchall()
                id.clear()
                r = 0
                for x in result:
                    r = r + 1
                    # print(x)
                    if str(x) == str(chen_id):
                        nomber = (r - 1)
                    id.append(x)
                print(id)
                print(nomber, "nomber for data in mas")

                cursor.execute("SELECT offtime FROM user")
                result = cursor.fetchall()
                day_off.clear()
                for x in result:
                    # print(x)
                    day_off.append(x)
                print(day_off)
                global do_kogda
                do_kogda = day_off[int(nomber)]
                lenf = sum(1 for line in open(str(message.chat.id) + 'problem.txt', 'r'))

                cursor.execute("SELECT status FROM user")
                result = cursor.fetchall()
                status.clear()
                for x in result:
                    # print(x)
                    status.append(x)
                print(status, "status")
                global now_status2
                now_status2 = status[int(nomber)]
                print(now_status2, "now_status")
            except Exception as e:
                print(e)
                print("–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö(–ø—Ä–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ)")

            print(int(lenf))
            print(str(do_kogda))
            print(str("(" + str(now_day) + ",)"))
            if int(lenf) > 1 and str(do_kogda) == str("(" + str(now_day2) + ",)"):
                try:
                    db = mysql.connector.connect(
                        host="209.250.253.38",
                        user="gpbot_user",
                        passwd="DHUIEh#$4647",
                        port="3306",
                        database="gpbot_db"
                    )
                    print(db)
                    cursor = db.cursor()
                except Exception as e:
                    print(e)
                    print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

                try:
                    sql = "UPDATE user SET status = %s WHERE offtime = %s"
                    val = ("0", str(now_day2))
                    cursor.execute(sql, val)
                    db.commit()
                    print(cursor.rowcount, "record(s) affected")
                except Exception as e:
                    print(e)
                    print("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–¥")

                bot.send_message(message.chat.id, "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å\n"
                                                  "–ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –ª–∏–±–æ —É–¥–∞–ª–∏—Ç–µ –ª–∏—à–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
                                                  "—Å –ª–∏—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞\n"
                                                  "–ø–æ —Ç–µ–∫—É—â–µ–º—É —Ç–∞—Ä–∏—Ñ—É\n"
                                                  "–û–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π\n"
                                                  "–º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é\n"
                                                  "üëë –¢–ê–†–ò–§–´\n")
            elif str(do_kogda) == str("(" + str(now_day2) + ",)"):

                try:
                    db = mysql.connector.connect(
                        host="209.250.253.38",
                        user="gpbot_user",
                        passwd="DHUIEh#$4647",
                        port="3306",
                        database="gpbot_db"
                    )
                    print(db)
                    cursor = db.cursor()
                except Exception as e:
                    print(e)
                    print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

                try:
                    sql1 = "UPDATE user SET status = %s WHERE offtime = %s"
                    val1 = ("0", str(now_day2))
                    cursor.execute(sql1, val1)
                    db.commit()
                    print(cursor.rowcount, "record(s) affected")
                except Exception as e:
                    print(e)
                    print("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–¥")
                bot.send_message(message.chat.id, "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å\n"
                                                  "–ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –ª–∏–±–æ —É–¥–∞–ª–∏—Ç–µ –ª–∏—à–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
                                                  "—Å –ª–∏—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞\n"
                                                  "–ø–æ —Ç–µ–∫—É—â–µ–º—É —Ç–∞—Ä–∏—Ñ—É\n"
                                                  "–û–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π\n"
                                                  "–º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é\n"
                                                  "üëë –¢–ê–†–ò–§–´\n")
            elif now_status2 == (3,):
                print("–°—Ç–∞—Ç—É—Å –í–ò–ü")
            elif now_status2 == (2,):
                print("–°—Ç–∞—Ç—É—Å –ü—Ä–µ–º–∏—É–º+")
            elif now_status2 == (1,) and lenf > 5:
                bot.send_message(message.chat.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ –Ω–µ\n"
                                                  "—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤—É,–ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ\n"
                                                  "–≤–∞—à–∏–º —Ç–∞—Ä–∏—Ñ–æ–º\n"
                                                  "–í–æ–∑–º–æ–∂–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤–∞—à–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞\n"
                                                  "–ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –ª–∏–±–æ —É–¥–∞–ª–∏—Ç–µ –ª–∏—à–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
                                                  "—Å –ª–∏—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞\n"
                                                  "–ø–æ —Ç–µ–∫—É—â–µ–º—É —Ç–∞—Ä–∏—Ñ—É\n"
                                                  "–û–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π\n"
                                                  "–º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é\n"
                                                  "üëë –¢–ê–†–ò–§–´\n")
            elif now_status2 == (0,) and lenf > 1:
                bot.send_message(message.chat.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ –Ω–µ\n"
                                                  "—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤—É,–ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ\n"
                                                  "–≤–∞—à–∏–º —Ç–∞—Ä–∏—Ñ–æ–º\n"
                                                  "–í–æ–∑–º–æ–∂–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤–∞—à–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞\n"
                                                  "–ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –ª–∏–±–æ —É–¥–∞–ª–∏—Ç–µ –ª–∏—à–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
                                                  "—Å –ª–∏—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞\n"
                                                  "–ø–æ —Ç–µ–∫—É—â–µ–º—É —Ç–∞—Ä–∏—Ñ—É\n"
                                                  "–û–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π\n"
                                                  "–º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é\n"
                                                  "üëë –¢–ê–†–ò–§–´\n")
            else:
                print("Oll good")

        chek_data()

        # def do_my_cod(sc):
        def do_my_cod():
            threading.Timer(600.0, do_my_cod).start()
            try:
                lenf = sum(1 for line in open(str(message.chat.id) + 'problem.txt', 'r'))
            except Exception as e:
                print(e)
                print("–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É")
            if int(lenf) > 1 and str(do_kogda) == str("(" + str(now_day2) + ",)"):
                print("–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–∞—Ä–∏—Ñ–∞ –∏—Å—Ç–µ–∫")
            elif now_status2 == (1,) and lenf > 5:
                print("–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–∞—Ä–∏—Ñ–∞ –∏—Å—Ç–µ–∫/–ª–∏—à–Ω–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
            elif now_status2 == (0,) and lenf > 1:
                print("–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–∞—Ä–∏—Ñ–∞ –∏—Å—Ç–µ–∫/–ª–∏—à–Ω–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
            else:
                try:
                    print("Doing ", message.chat.id)
                    list_of_apps = open(str(message.chat.id) + 'problem.txt', 'r').readlines()
                    leng = len(list_of_apps)
                    list_of_url = open(str(message.chat.id) + 'url.txt', 'r').readlines()
                    leng_url = len(list_of_url)
                    print(leng_url)
                    # if leng == 0:
                    #     print("–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç,—è –∂–¥—É")
                    # else:
                    # list_of_apps.clear() –Ω–µ –ø–æ–º–Ω—é –∑–∞—á–µ–º –Ω–∞–¥–æ
                    for nambers in range(leng):
                        print(nambers, "nambers")
                        with open(str(message.chat.id) + 'problem.txt', 'r') as f:
                            for i in range(int(nambers)):
                                f.readline()
                            x = f.readline()
                            print(x)
                            f.close()
                            try:
                                r = requests.get("https://play.google.com/store/search?q=" + str(x) + "&c=apps")
                                html = BeautifulSoup(r.content, "html.parser")
                            except Exception as e2:
                                print(e2)
                                print("–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç,–ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è")
                                bot.send_message(message.chat.id, "–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç,–ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è")

                            massiv_url = []
                            with open(str(message.chat.id) + 'url.txt', 'r') as p:
                                for i in range(int(nambers)):
                                    p.readline()
                                y = p.readline()
                                print(y)
                                p.close()
                                try:
                                    for el in html.find_all('img'):
                                        link = el['data-src']
                                        # link2 = str(link)
                                        massiv_url.append(link+"\n")
                                    print(massiv_url)
                                except Exception as e:
                                    print(e)
                                if y not in massiv_url:
                                    print("........–≠—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ—Ç—É –≤ Google Play........")
                                    bot.send_message(message.chat.id, "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ—Å—Ç–∞–ª–æ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
                                    bot.send_message(message.chat.id, "–ú—ã –æ—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ "
                                                                      "–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
                                    try:
                                        with open(str(message.chat.id) + 'problem.txt', 'r') as o:
                                            data = o.readlines()
                                        data = filter(lambda line: x not in line, data)
                                        with open(str(message.chat.id) + 'problem.txt', 'w') as o:
                                            o.write("".join(data))

                                        with open(str(message.chat.id) + 'url.txt', 'r') as m:
                                            data2 = m.readlines()
                                        data2 = filter(lambda line: y not in line, data2)
                                        with open(str(message.chat.id) + 'url.txt', 'w') as m:
                                            m.write("".join(data2))
                                            bot.send_message(message.chat.id, "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞")
                                            bot.send_message(message.chat.id, x)
                                    except Exception as e2:
                                        print(e2)
                                        print("........–û—à–∏–±–∫–∞,—É–¥–∞–ª–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞........")
                                        bot.send_message(message.chat.id,
                                                             "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è")
                                else:
                                    print("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—Å—Ç—å,–≤—Å–µ —Ö–æ—Ä–æ—à–æ!")
                except Exception as e2:
                    print(e2)
                    print("........–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É........ " + x)
                    bot.send_message(message.chat.id,
                                         "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")
                # s.enter(15, 1, do_my_cod, (sc,))

        do_my_cod()


# --------------------------------------------------------------------------------------------------------------------------------------------------------------


# --------------------------------------------------------------------------admin------------------------------------------------------------------------------------
@bot.message_handler(commands=["admin"])
def handle_command(message):
    sent = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    bot.register_next_step_handler(sent, admin_user)


def admin_user(message):
    in_pas = message.text
    if in_pas == constants.pas:
        sent = bot.send_message(message.chat.id, '–ü—Ä–∏–Ω—è—Ç–æ!\n'
                                                 '–í–ø–∏—à–∏—Ç–µ ID\n')
        bot.register_next_step_handler(sent, entr_id)
        # id.append(message.chat.id)
        # print(id)
    else:
        bot.send_message(message.chat.id, '–ù–µ –≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!\n'
                                          '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑;\n'
                                          '/admin ')


def entr_id(message):
    global id_of_new_user
    id_of_new_user = message.text
    sent = bot.send_message(message.chat.id, '–ü—Ä–∏–Ω—è—Ç–æ!\n'
                                             '–í–ø–∏—à–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 1\n')
    bot.register_next_step_handler(sent, entr_status)


def entr_status(message):
    global user_status
    user_status = message.text
    sent = bot.send_message(message.chat.id, '–ü—Ä–∏–Ω—è—Ç–æ!\n'
                                             '–í–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É –¥–æ –∫–æ–≥–¥–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç\n '
                                             '(–≤—á–µ—Ä–∞—à–Ω–∏–º –¥–Ω–µ–º)\n '
                                             '–≤ —Ñ–æ—Ä–º–∞—Ç–µ: 28\n')
    bot.register_next_step_handler(sent, date_end)


def date_end(message):
    user_data_end = message.text
    try:
        db = mysql.connector.connect(
            host="209.250.253.38",
            user="gpbot_user",
            passwd="DHUIEh#$4647",
            port="3306",
            database="gpbot_db"
        )
        print(db)
        cursor = db.cursor()
    except Exception as e:
        print(e)
        print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    try:
        sql = "UPDATE user SET status = %s WHERE id_user = %s"
        val = (str(user_status), str(id_of_new_user))
        cursor.execute(sql, val)
        db.commit()

        sql = "UPDATE user SET offtime = %s WHERE id_user = %s"
        val = (str(user_data_end), str(id_of_new_user))
        cursor.execute(sql, val)
        db.commit()

        bot.send_message(message.chat.id, '–ü—Ä–∏–Ω—è—Ç–æ!\n'
                                          '–î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã')

    except Exception as e2:
        print(e2)
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n'
                                          '/admin')


# ----------------------------------------------------------------------‚úÖ–î–û–ë–ê–í–ò–¢–¨----------------------------------------------------------------------------------------
@bot.message_handler(content_types=["text"])
def handle_command(message):
    if message.text == "‚úÖ –î–û–ë–ê–í–ò–¢–¨":
        try:
            file = open(str(message.chat.id) + 'problem.txt')
            file = open(str(message.chat.id) + 'url.txt')
        except Exception as e:
            print(e)
            kreate = open(str(message.chat.id) + 'problem.txt', 'tw', encoding='utf-8')
            kreate.close()
            kreate2 = open(str(message.chat.id) + 'url.txt', 'tw', encoding='utf-8')
            kreate2.close()
        chen_id = "(" + str(message.chat.id) + ",)"
        print(chen_id)
        print(id)
        if str(chen_id) not in str(id):
            bot.send_message(message.chat.id, "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞\n"
                                              "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                                              "@rallen, —Å–æ–æ–±—â–∏—Ç–µ –≤–∞—à ID:\n"
                                              "–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
                                              "–Ω–∞–∂–º–∏—Ç–µ /start")
            bot.send_message(message.chat.id, message.chat.id)
        else:
            try:
                db = mysql.connector.connect(
                    host="209.250.253.38",
                    user="gpbot_user",
                    passwd="DHUIEh#$4647",
                    port="3306",
                    database="gpbot_db"
                )
                print(db)
                cursor = db.cursor()
            except Exception as e:
                print(e)
                print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            try:
                nomber = 0
                cursor.execute("SELECT id_user FROM user")
                result = cursor.fetchall()
                id.clear()
                r = 0
                for x in result:
                    r = r + 1
                    # print(x)
                    if str(x) == str(chen_id):
                        nomber = (r - 1)
                    id.append(x)
                print(id)
                print(nomber, "nomber for status in mas")

                cursor.execute("SELECT status FROM user")
                result = cursor.fetchall()
                status.clear()
                for x in result:
                    # print(x)
                    status.append(x)
                print(status, "status")
                global now_status
                now_status = status[int(nomber)]
                print(now_status, "now_status")
                lenf = sum(1 for line in open(str(message.chat.id) + 'problem.txt', 'r'))
                print(lenf, "lenf")
                if now_status == (3,):
                    sent = bot.send_message(message.chat.id,
                                            '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—á–∏—Ç—ã–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏!\n'
                                            '–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–µ webviewappname, –∞ WebViewAppName')
                    bot.register_next_step_handler(sent, hello)
                elif now_status == (2,):
                    sent = bot.send_message(message.chat.id,
                                            '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—á–∏—Ç—ã–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏!\n'
                                            '–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–µ webviewappname, –∞ WebViewAppName')
                    bot.register_next_step_handler(sent, hello)
                elif now_status == (1,) and lenf <= 4:
                    sent = bot.send_message(message.chat.id,
                                            '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—á–∏—Ç—ã–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏!\n'
                                            '–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–µ webviewappname, –∞ WebViewAppName')
                    bot.register_next_step_handler(sent, hello)
                elif now_status == (0,) and lenf <= 0:
                    sent = bot.send_message(message.chat.id,
                                            '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—á–∏—Ç—ã–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏!\n'
                                            '–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–µ webviewappname, –∞ WebViewAppName')
                    bot.register_next_step_handler(sent, hello)
                else:
                    bot.send_message(message.chat.id,
                                     '–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n'
                                     '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø—É–Ω–∫—Ç "üëë –¢–ê–†–ò–§–´" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é \n'
                                     '–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å \n')
            except Exception as e:
                print(e)
                print("–û—à–∏–±–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –±–¥")
    elif message.text == "‚úçüèª –í–†–£–ß–ù–£–Æ":
        try:
            file = open(str(message.chat.id) + 'onetestapp.txt')
        except Exception as e:
            print(e)
            kreate = open(str(message.chat.id) + 'onetestapp.txt', 'tw', encoding='utf-8')
            kreate.close()
        chen_id = "(" + str(message.chat.id) + ",)"
        print(chen_id)
        print(id)
        if str(chen_id) not in str(id):
            bot.send_message(message.chat.id, "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞\n"
                                              "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                                              "@rallen, —Å–æ–æ–±—â–∏—Ç–µ –≤–∞—à ID:\n"
                                              "–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
                                              "–Ω–∞–∂–º–∏—Ç–µ /start")
            bot.send_message(message.chat.id, message.chat.id)
        else:
            sent = bot.send_message(message.chat.id, '–Ø –ø—Ä–æ–≤–µ—Ä—é —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n'
                                                     '–û–Ω–æ –Ω–µ –±—É–¥–µ—Ç –∑–∞–Ω–µ—Å–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –Ω–µ –±—É–¥–µ—Ç '
                                                     '–ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n '
                                                     '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—á–∏—Ç—ã–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏!\n'
                                                     '–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–µ webviewappname, –∞ WebViewAppName')
            bot.register_next_step_handler(sent, chek_app)
    elif message.text == "üìñ –°–ü–ò–°–û–ö":
        chen_id = "(" + str(message.chat.id) + ",)"
        print(chen_id)
        print(id)
        if str(chen_id) not in str(id):
            bot.send_message(message.chat.id, "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞\n"
                                              "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                                              "@rallen, —Å–æ–æ–±—â–∏—Ç–µ –≤–∞—à ID:\n"
                                              "–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
                                              "–Ω–∞–∂–º–∏—Ç–µ /start")
            bot.send_message(message.chat.id, message.chat.id)
        else:
            try:
                list_of_apps = open(str(message.chat.id) + 'problem.txt', 'r').read()
                bot.send_message(message.chat.id, '–ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–∏–π!\n')
                bot.send_message(message.chat.id, list_of_apps)
                print(list_of_apps)
            except Exception as e:
                print(e)
                print("........–í–∞—à —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç........")
                bot.send_message(message.chat.id, "–í –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π!")
    elif message.text == "‚ùå –£–î–ê–õ–ò–¢–¨":
        chen_id = "(" + str(message.chat.id) + ",)"
        print(chen_id)
        print(id)
        if str(chen_id) not in str(id):
            bot.send_message(message.chat.id, "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞\n"
                                              "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\n"
                                              "@rallen, —Å–æ–æ–±—â–∏—Ç–µ –≤–∞—à ID:\n"
                                              "–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
                                              "–Ω–∞–∂–º–∏—Ç–µ /start")
            bot.send_message(message.chat.id, message.chat.id)
        else:
            try:
                try:
                    file = open(str(message.chat.id) + "problem.txt")
                except Exception as e:
                    print(e)
                    kreate = open(str(message.chat.id) + 'problem.txt', 'tw', encoding='utf-8')
                    kreate.close()
                sent = bot.send_message(message.chat.id,
                                        '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—á–∏—Ç—ã–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏!\n'
                                        '–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–µ webviewappname, –∞ WebViewAppName\n')
                bot.register_next_step_handler(sent, enter_app_to_dell)
            except Exception as e:
                print(e)
                print("........–û—à–∏–±–∫–∞,—É–¥–∞–ª–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞........")
                bot.send_message(message.chat.id, "–ú—ã –Ω–µ –Ω–∞—à–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π,\n"
                                                  " –ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —É—á–∏—Ç—ã–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä!")
    elif message.text == "üëë –¢–ê–†–ò–§–´":
        chen_id = "(" + str(message.chat.id) + ",)"
        nomber = 0
        try:
            db = mysql.connector.connect(
                host="209.250.253.38",
                user="gpbot_user",
                passwd="DHUIEh#$4647",
                port="3306",
                database="gpbot_db"
            )
            print(db)
            cursor = db.cursor()
        except Exception as e:
            print(e)
            print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        try:
            cursor.execute("SELECT id_user FROM user")
            result = cursor.fetchall()
            id.clear()
            r = 0
            for x in result:
                r = r + 1
                # print(x)
                if str(x) == str(chen_id):
                    nomber = (r - 1)
                id.append(x)
            print(id)
            print(nomber, "nomber for status in mas")

            cursor.execute("SELECT status FROM user")
            result = cursor.fetchall()
            status.clear()
            for x in result:
                # print(x)
                status.append(x)
            print(status, "status")

            cursor.execute("SELECT offtime FROM user")
            result = cursor.fetchall()
            day_off.clear()
            for x in result:
                # print(x)
                day_off.append(x)
            print(day_off)
        except Exception as e:
            print(e)
            print("–û—à–∏–±–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –±–¥")
        now_status = status[int(nomber)]
        off_data = day_off[int(nomber)]
        print(now_status, "now_status")
        print(off_data, "off_data")
        if now_status == (3,):
            now_status = 3
        if now_status == (2,):
            now_status = 2
        if now_status == (1,):
            now_status = 1
        if now_status == (0,):
            now_status = 0
        if off_data == (0,):
            off_data = "–ë–µ—Å—Å—Ä–æ—á–Ω–æ"
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!\n"
                                          f'–í–∞—à —Ç–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ: {now_status}\n'
                                          f'–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {off_data}\n'
                                          "\n–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–∏–º –±–æ—Ç–æ–º, –≤—ã –¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —Ç–∞—Ä–∏—Ñ–æ–≤: \n"
                                          "\n"
                                          "0 - –û–ë–´–ß–ù–´–ô: –ë–µ—Å–ø–ª–∞—Ç–Ω–æ, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ\n"
                                          "–æ–¥–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –¥–æ—Å—Ç—É–ø–æ –≤—Å–µ–º\n"
                                          "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n"
                                          "\n"
                                          "1 - –ü–†–ï–ú–ò–£–ú: 5 USD/–º–µ—Å—è—Ü, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—è—Ç–∏\n"
                                          "–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π\n"
                                          "\n"
                                          "2 - üëë –ü–†–ï–ú–ò–£–ú +: 10 USD/–º–µ—Å—è—Ü, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–≥–æ\n"
                                          "–∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π\n"
                                          "\n"
        # "3- üëë –í–ò–ü üëë: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–≥–æ\n"
        # "–∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.\n"
        # "\n"
                                          "–î–ª—è –∑–∞–∫–∞–∑–∞/–∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞, –ø–∏—à–∏—Ç–µ:\n"
                                          "@rallen \n"
                                          f'–∏ —Å–æ–æ–±—â–∏—Ç–µ –≤–∞—à ID: {message.chat.id}')

    elif message.text == "üõé –ü–û–î–î–ï–†–ñ–ö–ê":
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –º—ã —Ä–∞–¥—ã —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!\n"
                                          "–ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º: \n"
                                          "@rallen\n")


def hello(message):
    bot.send_message(message.chat.id, "–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è!\n"
                                      "–ù–∞–º –Ω—É–∂–Ω–æ —á—É—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É...\n")
    try:
        name_of_app = message.text
        try:
            # r = requests.get("https://play.google.com/store/search?q=" + str(name_of_app))
            r = requests.get("https://play.google.com/store/search?q=" + str(name_of_app) + "&c=apps")
            html = BeautifulSoup(r.content, "html.parser")
        except Exception as e:
            print(e)
            print("–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç,–ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è")
            bot.send_message(message.chat.id, "–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è,\n"
                                              "–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∫–ª—é—á–∞—è —Ä–µ–≥–∏—Å—Ç!.")
        n = 0
        a = 0
        k = 0
        massiv = []
        global massivimg
        massivimg = []
        namber_of_element = []
        namber_of_img = []
        for el in html.select(".RZEgze"):
            # print(el)
            n = n + 1
            t_min = el.select(".WsMG1c.nnK0zc")[0].text
            # k = [t_min for i in range(n)]
            massiv.append(t_min)
            # t_min2 = el.select(".temperature .min")[n].text
            # print(n, t_min)
        print(massiv)
        try:
            for nom in massiv:
                if nom == str(name_of_app):
                    namber_of_element.append(a)
                    print(a, nom)
                a = a + 1
            print(namber_of_element)
            # namber_of_element = massiv.index(str(name_of_app))
        except Exception as e:
            print(e)
            print("........–û—à–∏–±–∫–∞ Google Play........")
        if str(message.text) not in massiv:
            print("........–≠—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ—Ç—É –≤ Google Play........")
            bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ Google Play")
        else:
            for app in namber_of_element:
                print(app)
                print(massiv[app])
                if massiv[app] == str(name_of_app):
                    try:
                        for el in html.find_all('img'):
                            link = el['data-src']
                            k = k + 1
                            link2 = str(link)
                            massivimg.append(link2)
                            # t_min2 = el.select(".temperature .min")[n].text
                            # print(k, link2)
                    except Exception as e:
                        print(e)
                    print(massivimg)
                    url = massivimg[app * 3]
                    # url = "http://risovach.ru/upload/2014/02/mem/muzhik-bleat_43233947_orig_.jpg"
                    img = urllib.request.urlopen(url).read()
                    out = open("img.jpg", "wb")
                    out.write(img)
                    out.close()
                    img2 = open('img.jpg', 'rb')
                    bot.send_photo(message.chat.id, img2)
                    bot.send_message(message.chat.id,
                                     f'‚Ññ: {app}\n'
                                     f'{name_of_app}')
                    global reset_name_of_app
                    reset_name_of_app = name_of_app
            sent = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (‚Ññ) –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n'
                                                     '–∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –≤—ã—à–µ —Å–ø–∏—Å–∫–∞\n'
                                                     '–ù–∞–ø—Ä–∏–º–µ—Ä:1 –∏–ª–∏ 8\n')
            bot.register_next_step_handler(sent, addAppImg)
    except Exception as e:
        print(e)
        print("........–û—à–∏–±–∫–∞,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞........")
        bot.send_message(message.chat.id, "–£–ø—Å, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


def addAppImg(message):
    try:
        open(str(message.chat.id) + 'problem.txt', 'a').write(reset_name_of_app + "\n")
        open(str(message.chat.id) + 'url.txt', 'a').write(massivimg[int(message.text)*3] + "\n")
        url = massivimg[int(message.text)*3]
        img = urllib.request.urlopen(url).read()
        out = open("img.jpg", "wb")
        out.write(img)
        out.close()
        img2 = open('img.jpg', 'rb')
        bot.send_photo(message.chat.id, img2)
        bot.send_message(message.chat.id, '–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ :)')
    except Exception as e:
        print(e)
        print("........–û—à–∏–±–∫–∞,–Ω–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è........")
        bot.send_message(message.chat.id, "–£–ø—Å, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


# --------------------------------------------------------------‚úçüèª–í–†–£–ß–ù–£–Æ------------------------------------------------------------------------------------------------


def chek_app(message):
    try:
        open(str(message.chat.id) + 'onetestapp.txt', 'w').write(message.text + "\n")
        bot.send_message(message.chat.id, '–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è!\n'
                                          '–ù–∞–º –Ω—É–∂–Ω–æ —á—É—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É...\n')
        name_of_app = message.text
        try:
            # r = requests.get("https://play.google.com/store/search?q=" + str(name_of_app))
            r = requests.get("https://play.google.com/store/search?q=" + str(name_of_app) + "&c=apps")
            html = BeautifulSoup(r.content, "html.parser")
        except Exception as e:
            print(e)
            print("–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç,–ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è")
            bot.send_message(message.chat.id,
                             "–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∫–ª—é—á–∞—è —Ä–µ–≥–∏—Å—Ç—Ä.")
        n = 0
        a = 0
        k = 0
        massiv = []
        massivimg = []
        namber_of_element = []
        namber_of_img = []
        for el in html.select(".RZEgze"):
            # print(el)
            n = n + 1
            t_min = el.select(".WsMG1c.nnK0zc")[0].text
            # k = [t_min for i in range(n)]
            massiv.append(t_min)
            # t_min2 = el.select(".temperature .min")[n].text
            # print(n, t_min)
        print(massiv)
        try:
            if name_of_app not in massiv:
                bot.send_message(message.chat.id, "–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Å–∫–æ—Ä–µ–π –≤—Å–µ–≥–æ –æ–Ω–æ —É–¥–∞–ª–µ–Ω–æ")
            else:
                for nom in massiv:
                    if nom == str(name_of_app):
                        namber_of_element.append(a)
                        print(a, nom)
                    a = a + 1
                print(namber_of_element)
                # namber_of_element = massiv.index(str(name_of_app))
        except Exception as e:
            print(e)
            print("........–û—à–∏–±–∫–∞........")
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏,–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!")
        # print(massiv[int(namber_of_element)], " –≠–ª–µ–º–µ–Ω—Ç –ø–æ–¥ —ç—Ç–∏–º –Ω–æ–º–µ—Ä–æ–º")
        for app in namber_of_element:
            print(app)
            print(massiv[app])
            if massiv[app] == str(name_of_app):
                try:
                    for el in html.find_all('img'):
                        link = el['data-src']
                        k = k + 1
                        link2 = str(link)
                        massivimg.append(link2)
                        # t_min2 = el.select(".temperature .min")[n].text
                        # print(k, link2)
                except Exception as e:
                    print(e)
                print(massivimg)
                url = massivimg[app * 3]
                # url = "http://risovach.ru/upload/2014/02/mem/muzhik-bleat_43233947_orig_.jpg"
                img = urllib.request.urlopen(url).read()
                out = open("img.jpg", "wb")
                out.write(img)
                out.close()
                img2 = open('img.jpg', 'rb')
                print("........–ù–∞—à–µ–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!........")
                bot.send_message(message.chat.id, "–ú—ã –Ω–∞—à–ª–∏ —Ç–∞–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
                bot.send_photo(message.chat.id, img2)
                bot.send_message(message.chat.id, name_of_app)
            # print(massiv.count(str(name_of_app)))
    except Exception as e:
        print(e)
        print("........–û—à–∏–±–∫–∞,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞........")
        bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ "
                                          "–≤ Google Play")


# --------------------------------------------------------------------------‚ùå–£–î–ê–õ–ò–¢–¨------------------------------------------------------------------------------------          bot.send_message(message.chat.id, "........–û—à–∏–±–∫–∞,—É–¥–∞–ª–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞........")


def enter_app_to_dell(message):
    try:
        schet = 0
        with open(str(message.chat.id) + 'problem.txt', 'r') as f:
            data = f.readlines()
            print(data)
            if str(message.text + "\n") not in data:
                bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ –Ω–µ—Ç")
            else:
                for namber in data:
                    x = namber
                    print(x, "x")
                    if x == str(message.text+"\n"):
                        with open(str(message.chat.id) + 'url.txt', 'r') as p:
                            for i in range(int(schet)):
                                p.readline()
                            y = p.readline()
                            print(y)
                            p.close()
                            with open(str(message.chat.id) + 'problem.txt', 'r') as o:
                                data = o.readlines()
                            data = filter(lambda line: x not in line, data)
                            with open(str(message.chat.id) + 'problem.txt', 'w') as o:
                                o.write("".join(data))

                            with open(str(message.chat.id) + 'url.txt', 'r') as m:
                                data2 = m.readlines()
                            data2 = filter(lambda line: y not in line, data2)
                            with open(str(message.chat.id) + 'url.txt', 'w') as m:
                                m.write("".join(data2))
                                bot.send_message(message.chat.id, "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞")
                                bot.send_message(message.chat.id, x)
                    else:
                        schet = schet+1
    except Exception as e:
        print(e)
        print("........–û—à–∏–±–∫–∞,—É–¥–∞–ª–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞........")
        bot.send_message(message.chat.id,
                         "–ú—ã –Ω–µ –Ω–∞—à–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, –ø—Ä–æ–≤–µ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —É—á–∏—Ç—ã–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä")


# --------------------------------------------------------------------------------------------------------------------------------------------------------------

if __name__ == "__main__":
    bot.polling(none_stop=True)
